import Head from "next/head";
import Image from "next/image";
import { signIn, signOut, useSession } from "next-auth/react";
import { getServerSession } from "next-auth";
import { authOptions } from "../server/auth";

import { api } from "~/utils/api";

import type { GetServerSidePropsContext, NextPage } from "next";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();

  console.log(sessionData);
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="hero min-h-screen bg-base-200  ">
        <div className="hero-content text-center">
          <div className="max-w-xl">
            <h1 className="text-6xl font-bold">Welcome to Surveys</h1>
            <p className="py-6 text-lg">
              Enhance your data-driven decision making with our survey web
              application. Our survey application is designed to deliver
              accurate and reliable results for your business needs. Join today
              by signing in with your Github account
            </p>
            <button
              className="justify-content-center btn-primary btn mx-auto flex gap-3 "
              onClick={sessionData ? () => void signOut() : () => void signIn()}
            >
              Sign in with github
              <Image
                src="/images/github.png"
                width={30}
                height={30}
                alt="Github Logo"
              />
            </button>
          </div>
        </div>
      </div>

      <AuthShowcase />
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};

export async function getServerSideProps(ctx: GetServerSidePropsContext) {
  const session = await getServerSession(ctx.req, ctx.res, authOptions);

  if (session) {
    return {
      redirect: {
        destination: "/dash",
        permanent: true,
      },
    };
  }
  return {
    props: {
      session,
    },
  };
}
